name: rocky Arm64 build workflows

on:
  push:
    branches: 
      - 'develop'
    paths:
      - 'XEngine_Source/**'
      - 'XEngine_Release/**'
      - '.github/**'
  
permissions:
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      IMAGE_NAME: rockylinux/rockylinux:9.5

    strategy:
      fail-fast: false
      matrix:
        arch: [linux/arm64]

    steps:
       # 检出您的主仓库代码
      - name: Checkout main repository code
        uses: actions/checkout@v4
        with:
          ref: 'develop'
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Build ${{ matrix.arch }}
        run: |
          docker run --platform ${{ matrix.arch }} --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace ${{ env.IMAGE_NAME }} /bin/sh -c '
            set -e
            dnf update -y
            dnf install --allowerasing git make g++ wget curl jq unzip -y

            git config --global --add safe.directory /workspace
            git submodule init
            git submodule update

            latest_tag=$(curl -s https://api.github.com/repos/libxengine/libxengine/releases/latest | jq -r .tag_name)
            wget https://github.com/libxengine/libxengine/releases/download/$latest_tag/XEngine_RockyLinux_9_Arm64.zip
            unzip ./XEngine_RockyLinux_9_Arm64.zip -d ./XEngine_RockyLinux_9_Arm64
            cd XEngine_RockyLinux_9_Arm64

            chmod 777 ./XEngine_LINEnv.sh
            ./XEngine_LINEnv.sh -i 0

            cp -rf ./XEngine_Include /usr/local/include
            find ./XEngine_Linux -name "*.so" -exec cp {} /usr/lib64 \;         
            ldconfig
            cd ..

            cd XEngine_Source
            make ARCH=Arm64 RELEASE=1
            make FLAGS=InstallAll
            make FLAGS=CleanAll  
            cd ..

            cd XEngine_Release
            ./XEngine_AuthorizeService -t
            chown -R $(id -u):$(id -g) .
            chmod -R a+r .  '

      - name: Upload folder as artifact with RockyLinux
        uses: actions/upload-artifact@v4
        with:
          name: XEngine_AuthorizeService-RockyLinux-9-Arm64
          path: XEngine_Release/
          retention-days: 1
