name: debian build workflows

on:
  push:
    branches:
      - 'develop'
    paths:
      - 'XEngine_Source/**'
      - 'XEngine_Release/**'
      - '.github/**'

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    container:
      image: debian:bookworm
      options: --platform ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-24.04
            platform: linux/amd64
            artifact: x86-64

    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4

      - name: Checkout dependency repository (xengine)
        uses: actions/checkout@v4
        with:
          repository: libxengine/libxengine
          path: libxengine

      - name: sub module checkout (opensource)
        uses: actions/checkout@v4
        with:
          repository: libxengine/XEngine_OPenSource
          path: XEngine_Source/XEngine_Depend

      - name: install system package
        run: |
            apt update -y
            apt install gcc g++ make git jq unzip curl -y

      - name: Set up Dependency rocky linux Environment
        run: |
            cd libxengine
            chmod 777 *
            ./XEngine_LINEnv.sh -i 0
      - name: install xengine library
        run: |
            latest_tag=$(curl -s https://api.github.com/repos/libxengine/libxengine/releases/latest | jq -r .tag_name)
            wget https://github.com/libxengine/libxengine/releases/download/$latest_tag/XEngine_Debian_12_${{ matrix.artifact }}.zip
            unzip ./XEngine_Debian_12_${{ matrix.artifact }}.zip -d ./XEngine_Debian_12_${{ matrix.artifact }}
            cd XEngine_Debian_12_${{ matrix.artifact }}
            
            cp -rf ./XEngine_Include /usr/local/include
            find ./XEngine_Linux -name "*.so" -exec cp {} /usr/local/lib \;         
            ldconfig

      - name: make
        run: |
            cd XEngine_Source
            make
            make FLAGS=InstallAll
            make FLAGS=CleanAll

            make RELEASE=1
            make FLAGS=InstallAll
            make FLAGS=CleanAll
            cd ..
      - name: test
        run: |
            cd XEngine_Release
            ./XEngine_AuthorizeService -t

      - name: Upload folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: XEngine_AuthorizeService-Debian_12_x86-64
          path: XEngine_Release/
          retention-days: 1